
name: Azure Lab
run-name: Lab Practice

on:
  workflow_dispatch:
    inputs:
      token:
        type: string
        description: Access Token
        required: true
      account_id:
        type: string
        description: Account ID
        required: true
      location:
        type: choice
        description: 'Location'
        required: false
        options:
          - 'default'
          - 'westus2'
          - 'southcentralus'
          - 'centralus'
          - 'eastus'
          - 'westeurope'
          - 'southeastasia'
          - 'japaneast'
          - 'brazilsouth'
          - 'australiasoutheast'
          - 'centralindia'
      num_vms:
        description: 'Number of VMs'
        required: true
        default: 1
        type: number
        

jobs:

  Create-an-Azure-Resource-using-scripts:
    runs-on: windows-2022
      ## https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories
    environment: AzureLab
    defaults:
      run:
        shell: powershell

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        ## https://github.com/actions/checkout

      - name: Prepare
        shell: powershell
        run: |
          [System.String[]]$packages = @(
            ##'Az.Accounts',
            'Az.Resources',
            'Az.Compute',
            'Az'
          );
          [System.String[]]$skip = @(
            'Az'
          );
          ## https://www.powershellgallery.com/packages/Az/
          foreach ($azp in $packages)
          {
            if ( ${skip}.Contains("${azp}") ) {
              continue;
            }
            Install-Module -Name "${azp}" -Scope CurrentUser -Repository PSGallery -AllowClobber -Force;
          }
          foreach ($azp in $packages)
          {
            if ( ${skip}.Contains("${azp}") ) {
              continue;
            }
            Get-InstalledModule -Name "${azp}";
          }
          

      - name: Connect
        env:
          TOKEN : "${{ github.event.inputs.token }}"
          ID    : "${{ github.event.inputs.account_id }}"
        run: |
          [System.String]$Token = "${Env:TOKEN}";
          [System.String]$Id    = "${Env:ID}";
          [Microsoft.Azure.Commands.Profile.Models.Core.PSAzureProfile]$Profile=(Connect-AzAccount -AccessToken "${Token}" -AccountId "${Id}");
          Write-Output ${Profile};
          [System.String]$Expire = (Get-AzAccessToken).ExpiresOn.ToString('u');
          Write-Output "The session will expire at ${Expire}. "
          [Microsoft.Azure.Commands.Profile.Models.PSAzureSubscription[]]$Subscriptions = (Get-AzSubscription);
          Write-Output ${Subscriptions};
          if ( ${Subscriptions}.Count -eq 0 ) {
            Write-Error -Message 'There is no subscription. '
            exit 1;
          }

      - name: Get Resource Group Information and Determine Location
        working-directory: .\Azure\Lab\automate-azure-tasks-with-powershell\
        env:
          LOCATION : "${{ github.event.inputs.location }}"
        run: |
          .\09_Resource_Group_Overview.ps1
          .\01_Get_Resource_Group_Information.ps1

      - name: Create Linux Virtual Machines
        working-directory: .\Azure\Lab\automate-azure-tasks-with-powershell\
        env:
          VM_USERNAME  : "${{ secrets.USERNAME_DEFAULT }}"
          VM_PASSWORD  : "${{ secrets.PASSWORD_DEFAULT }}"
          NUM_VMS      : "${{ github.event.inputs.num_vms }}"
        run: |
          .\02_Create_Linux_VMs.ps1

      - name: Check Virtual Machines
        working-directory: .\Azure\Lab\automate-azure-tasks-with-powershell\
        env:
          VM_USERNAME  : "${{ secrets.USERNAME_DEFAULT }}"
          VM_PASSWORD  : "${{ secrets.PASSWORD_DEFAULT }}"
        run: |
          .\03_Check_Linux_VMs.ps1
      
      - name: Delete Virtual Machines
        if: always()
        working-directory: .\Azure\Lab\automate-azure-tasks-with-powershell\
        run: |
         'testing' 



          

